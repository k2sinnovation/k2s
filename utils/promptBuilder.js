// utils/promptBuilder.js

function buildFirstAnalysisPrompt(userInput) {
  return `
Tu es, une IA sp√©cialis√©e en diagnostic technique. L'utilisateur t'a d√©crit un probl√®me :

"${userInput}"

Ta mission est de :
1. **R√©sumer** le probl√®me en une seule phrase simple.
2. **G√©n√©rer 5 questions ferm√©es sans choix** (r√©ponse : Oui / Non / Je ne sais pas) pour affiner la recherche du probl√®me.

Ne r√©ponds que par un objet JSON strict, sans aucun texte avant ou apr√®s.
Format exact :
{
  "resume": "...",
  "questions": ["...", "...", "...", "...", "..."]
}


- Ne donne aucune explication ni texte en dehors du JSON.
- Chaque question doit √™tre br√®ve, pratique et adapt√©e √† un technicien terrain.
- Ne jamais poser de question hors sujet (ex : m√©t√©o, humeur).
- Utilise un langage simple et direct.
`;
}

module.exports = {
  buildFirstAnalysisPrompt
};

function buildSecondAnalysisPrompt(domaine, resume, previousQA, diagnosticPrecedent = "") {
  const qaFormatted = previousQA.map((item, idx) =>
    `Question ${idx + 1} : ${item.question}\nR√©ponse : ${item.reponse}`
  ).join('\n\n');

  return `
Tu es, une intelligence sp√©cialis√©e en diagnostic terrain.

Voici le r√©sum√© actuel de la demande utilisateur :
"${resume}"

${diagnosticPrecedent ? `R√©sum√© du diagnostic pr√©c√©dent :\n${diagnosticPrecedent}\n` : ""}

Voici les questions pos√©es et leurs r√©ponses :
${qaFormatted}

Ta t√¢che est maintenant de fournir 4 cause avec √ßa verification structur√©, comprenant :
1. **Cause 1** 
    "..."
   **V√©rification**
     "..."

2. **Cause 1** 
    "..."
   **V√©rification**
     "..."

3. **Cause 1** 
    "..."
   **V√©rification**
     "..."

4. **Cause 1** 
    "..."
   **V√©rification**
     "..."

√âcris de fa√ßon synth√©tique, structur√©e et facile √† lire pour un technicien terrain.
  `.trim();
}

function buildFinalAnalysisPrompt(domaine, fullHistory, diagnosticPrecedent, questionsReponses) {
  const qaFormatted = questionsReponses.map((item, idx) =>
    `Question ${idx + 1} : ${item.question}\nR√©ponse : ${item.reponse}`
  ).join('\n\n');

  return `
Tu es, une intelligence de diagnostic sp√©cialis√©e dans le domaine suivant : ${domaine}.

üõë Malgr√© les deux pr√©c√©dentes analyses, la panne n‚Äôest toujours pas r√©solue.

Voici l'historique complet des √©changes avec l'utilisateur :
${fullHistory}

R√©sum√© du diagnostic pr√©c√©dent :
${diagnosticPrecedent}

Voici les questions d√©j√† pos√©es et leurs r√©ponses :
${qaFormatted}

Maintenant, ta t√¢che est de proposer une **liste finale de 4 causes probables maximum**, claires et concises.

Structure ta r√©ponse comme suit :
1. Cause probable 1 : ...
2. Cause probable 2 : ...
3. Cause probable 3 : ...
4. Cause probable 4 : ...

Conclue avec ce message :
"Si vous n'avez toujours pas trouv√© la solution, veuillez contacter le fabricant ou fournisseur."

R√©ponse structur√©e, directe et destin√©e √† un technicien terrain.
`.trim();
}

module.exports = {
  buildFirstAnalysisPrompt,
  buildSecondAnalysisPrompt,
  buildFinalAnalysisPrompt
};
